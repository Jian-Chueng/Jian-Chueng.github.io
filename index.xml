<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jian Zhang</title>
    <link>https://jianzhang6.github.io/</link>
      <atom:link href="https://jianzhang6.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Jian Zhang</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Jian Zhang</copyright><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jianzhang6.github.io/images/icon_hu931796a4a973aa12569eec04f67feb0b_29675_512x512_fill_lanczos_center_2.png</url>
      <title>Jian Zhang</title>
      <link>https://jianzhang6.github.io/</link>
    </image>
    
    <item>
      <title>ROS Melodic安装记录</title>
      <link>https://jianzhang6.github.io/blog/ros-learning-note/installation-ros/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/blog/ros-learning-note/installation-ros/</guid>
      <description>&lt;p&gt;经过一番思想上挣扎，好几次失败终于从Ubuntu16.04+Kinetic升级到18.04+Melodic。😭️&lt;/p&gt;
&lt;h3 id=&#34;1-ubuntu-respositories&#34;&gt;1. Ubuntu respositories&lt;/h3&gt;
&lt;p&gt;打开《软件和更新》确保允许&amp;quot;restricted,&amp;rdquo; &amp;ldquo;universe,&amp;rdquo; and &amp;ldquo;multiverse&amp;rdquo; 。&lt;/p&gt;
&lt;h3 id=&#34;2-设置sourceslist&#34;&gt;2. 设置sources.list&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo sh -c &#39;echo &amp;quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&amp;quot; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3-设置keys&#34;&gt;3. 设置keys&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-key adv --keyserver &#39;hkp://keyserver.ubuntu.com:80&#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-03-18%2021-24-21.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于之前安装过其他版本所以是这样&lt;/p&gt;
&lt;h3 id=&#34;4-安装&#34;&gt;4. 安装&lt;/h3&gt;
&lt;p&gt;确保Debian软件包目录索引是最新的&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完整版：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt install ros-melodic-desktop-full
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5-初始化rosdep&#34;&gt;5. 初始化rosdep&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo rosdep init
rosdep update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-03-18%2023-33-52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6-环境设置&#34;&gt;6. 环境设置&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;echo &amp;quot;source /opt/ros/melodic/setup.bash&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查是否正确&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;gedit ~/ .bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后几行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2020-03-19%2000-03-07.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;7软件包的依赖关系&#34;&gt;7.软件包的依赖关系&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;8-检查是否成功安装&#34;&gt;8. 检查是否成功安装&lt;/h3&gt;
&lt;p&gt;新Terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;roscore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;2020-03-19%2000-08-15.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;OK～＼（≧▽≦）／～啦啦啦&lt;/p&gt;
&lt;h4 id=&#34;尝试一下控制小乌龟&#34;&gt;尝试一下控制小乌龟&lt;/h4&gt;
&lt;p&gt;新Terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;rosrun turtlesim turtlesim_node
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新Terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;rosrun turtlesim turtle_teleop_key
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Occlusion-aware UAV Path Planning for Reconnaissance and Surveillance in Complex Environments</title>
      <link>https://jianzhang6.github.io/publication/conference-paper/robio2019/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/publication/conference-paper/robio2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>🤖️ New toy 🤖️</title>
      <link>https://jianzhang6.github.io/post/getting-started/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/post/getting-started/</guid>
      <description>&lt;p&gt;Got a new toy! 🤖️&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;drone.jpeg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Collision-Free 3D Path Planning Strategy for Mobile Robots</title>
      <link>https://jianzhang6.github.io/publication/conference-paper/anzcc2019/1/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/publication/conference-paper/anzcc2019/1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Path Planning for a Mobile Robot in Unknown Dynamic Environments Using Integrated Environment Representation and Reinforcement Learning</title>
      <link>https://jianzhang6.github.io/publication/conference-paper/anzcc2019/2/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/publication/conference-paper/anzcc2019/2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ANZCC 2019 Best Paper 🥳</title>
      <link>https://jianzhang6.github.io/post/anzcc/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/post/anzcc/</guid>
      <description>&lt;p&gt;I am truly humbled and honored to receive the ANZCC 2019 best paper award. This is clearly one of the most memorable days of my Ph.D. study!&lt;/p&gt;
&lt;p&gt;My deepest thanks for ANZCC&#39;s encouragement！&lt;/p&gt;
&lt;p&gt;😉&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;nz.JPG&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Hybrid Reactive Navigation Strategy for a Non-holonomic Mobile Robot in Cluttered Environments</title>
      <link>https://jianzhang6.github.io/publication/conference-paper/ccc2019/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/publication/conference-paper/ccc2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>01 Computer Vision</title>
      <link>https://jianzhang6.github.io/blog/build-an-autonomous-car-with-python/01/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/blog/build-an-autonomous-car-with-python/01/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
import keras
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam
from keras.utils.np_utils import to_categorical
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;n_pts = 500
centers = [[-1, 1], [-1, -1], [1, -1], [1, 1], [0, 0]]
X, y = datasets.make_blobs(n_samples=n_pts, random_state=123, centers=centers, cluster_std=0.4)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plt.scatter(X[y==0, 0],X[y==0, 1])
plt.scatter(X[y==1, 0],X[y==1, 1])
plt.scatter(X[y==2, 0],X[y==2, 1])
plt.scatter(X[y==3, 0],X[y==3, 1])
plt.scatter(X[y==4, 0],X[y==4, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.collections.PathCollection at 0x1a33248400&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./Multiclass_2_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(y)
y_cat = to_categorical(y,5)
print(y_cat)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[3 3 4 0 2 1 1 4 4 4 3 2 1 0 2 4 4 4 3 0 3 0 3 4 1 3 1 0 4 2 3 1 0 4 1 0 4
 0 4 0 1 3 3 0 3 1 3 4 0 4 0 2 3 0 2 4 4 0 3 4 1 3 0 4 2 1 1 2 3 2 3 2 1 1
 3 2 4 2 2 3 0 2 4 3 2 1 3 3 3 3 1 1 4 2 4 4 1 2 4 1 4 2 2 3 4 1 1 3 3 2 1
 3 1 0 1 0 4 4 4 3 1 3 3 3 1 4 4 0 2 0 1 1 0 4 0 1 1 4 4 0 4 3 4 4 2 4 0 0
 0 4 2 0 4 1 0 2 2 1 3 0 1 2 2 4 4 1 3 2 3 3 3 2 2 2 4 0 1 1 0 1 4 4 3 2 3
 2 3 1 0 3 4 2 1 0 0 0 4 3 0 4 2 2 3 1 0 4 4 1 2 1 3 1 4 4 0 1 4 2 4 0 4 0
 1 2 3 0 1 0 3 3 4 3 4 0 0 1 1 3 0 4 1 4 2 1 2 4 4 3 3 1 1 1 4 1 1 1 4 3 1
 0 0 2 2 2 3 2 3 4 2 3 3 1 1 0 4 0 3 0 0 0 3 2 2 1 4 2 0 0 2 2 1 3 3 1 3 0
 0 1 4 2 2 2 1 0 0 1 0 0 1 2 4 2 4 2 1 3 0 0 1 4 1 2 4 4 4 3 4 1 2 3 1 3 1
 0 0 2 4 1 3 1 1 2 1 4 3 1 2 3 2 0 4 1 4 0 2 2 0 1 2 2 4 4 0 4 1 3 3 2 2 0
 4 3 3 1 2 2 4 3 0 3 3 3 3 0 1 4 4 4 0 3 3 2 4 0 4 0 0 4 2 2 2 3 0 2 0 0 1
 2 3 0 0 2 4 2 3 0 3 0 1 0 4 1 0 0 1 3 1 4 0 2 1 1 3 2 3 2 2 2 3 1 0 0 0 1
 3 4 2 1 0 2 1 4 3 3 4 0 0 2 2 0 0 2 2 3 4 3 2 2 2 2 0 1 3 0 2 1 2 0 2 3 4
 3 1 4 3 3 0 2 4 0 4 1 3 2 1 3 0 1 2 1]
[[0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]
 ...
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 1. 0. 0. 0.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = Sequential()
model.add(Dense(units=5, input_shape=(2,), activation=&#39;softmax&#39;))
model.compile(Adam(0.1), loss=&#39;categorical_crossentropy&#39;, metrics=[&#39;accuracy&#39;])

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model.fit(x=X, y=y_cat, verbose=1, batch_size=50, epochs=100)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Epoch 1/100
500/500 [==============================] - 1s 1ms/step - loss: 1.2781 - acc: 0.4940
Epoch 2/100
500/500 [==============================] - 0s 49us/step - loss: 0.6296 - acc: 0.8520
Epoch 3/100
500/500 [==============================] - 0s 47us/step - loss: 0.4182 - acc: 0.9120
Epoch 4/100
500/500 [==============================] - 0s 65us/step - loss: 0.3323 - acc: 0.9440
Epoch 5/100
500/500 [==============================] - 0s 57us/step - loss: 0.2890 - acc: 0.9420
Epoch 6/100
500/500 [==============================] - 0s 50us/step - loss: 0.2626 - acc: 0.9460
Epoch 7/100
500/500 [==============================] - 0s 38us/step - loss: 0.2451 - acc: 0.9440
Epoch 8/100
500/500 [==============================] - 0s 51us/step - loss: 0.2323 - acc: 0.9480
Epoch 9/100
500/500 [==============================] - 0s 40us/step - loss: 0.2217 - acc: 0.9500
Epoch 10/100
500/500 [==============================] - 0s 150us/step - loss: 0.2145 - acc: 0.9500
Epoch 11/100
500/500 [==============================] - 0s 76us/step - loss: 0.2062 - acc: 0.9460
Epoch 12/100
500/500 [==============================] - 0s 72us/step - loss: 0.2001 - acc: 0.9440
Epoch 13/100
500/500 [==============================] - 0s 65us/step - loss: 0.1956 - acc: 0.9500
Epoch 14/100
500/500 [==============================] - 0s 47us/step - loss: 0.1914 - acc: 0.9500
Epoch 15/100
500/500 [==============================] - 0s 85us/step - loss: 0.1877 - acc: 0.9480
Epoch 16/100
500/500 [==============================] - 0s 64us/step - loss: 0.1857 - acc: 0.9460
Epoch 17/100
500/500 [==============================] - 0s 67us/step - loss: 0.1816 - acc: 0.9480
Epoch 18/100
500/500 [==============================] - 0s 60us/step - loss: 0.1811 - acc: 0.9420
Epoch 19/100
500/500 [==============================] - 0s 69us/step - loss: 0.1766 - acc: 0.9500
Epoch 20/100
500/500 [==============================] - 0s 79us/step - loss: 0.1767 - acc: 0.9460
Epoch 21/100
500/500 [==============================] - 0s 53us/step - loss: 0.1721 - acc: 0.9500
Epoch 22/100
500/500 [==============================] - 0s 57us/step - loss: 0.1725 - acc: 0.9460
Epoch 23/100
500/500 [==============================] - 0s 54us/step - loss: 0.1688 - acc: 0.9500
Epoch 24/100
500/500 [==============================] - 0s 69us/step - loss: 0.1693 - acc: 0.9440
Epoch 25/100
500/500 [==============================] - 0s 59us/step - loss: 0.1665 - acc: 0.9480
Epoch 26/100
500/500 [==============================] - 0s 91us/step - loss: 0.1666 - acc: 0.9460
Epoch 27/100
500/500 [==============================] - 0s 63us/step - loss: 0.1650 - acc: 0.9500
Epoch 28/100
500/500 [==============================] - 0s 68us/step - loss: 0.1637 - acc: 0.9520
Epoch 29/100
500/500 [==============================] - 0s 61us/step - loss: 0.1630 - acc: 0.9520
Epoch 30/100
500/500 [==============================] - 0s 76us/step - loss: 0.1634 - acc: 0.9440
Epoch 31/100
500/500 [==============================] - 0s 48us/step - loss: 0.1607 - acc: 0.9500
Epoch 32/100
500/500 [==============================] - 0s 85us/step - loss: 0.1613 - acc: 0.9480
Epoch 33/100
500/500 [==============================] - 0s 65us/step - loss: 0.1604 - acc: 0.9500
Epoch 34/100
500/500 [==============================] - 0s 58us/step - loss: 0.1604 - acc: 0.9480
Epoch 35/100
500/500 [==============================] - 0s 75us/step - loss: 0.1590 - acc: 0.9500
Epoch 36/100
500/500 [==============================] - 0s 52us/step - loss: 0.1590 - acc: 0.9500
Epoch 37/100
500/500 [==============================] - 0s 59us/step - loss: 0.1582 - acc: 0.9500
Epoch 38/100
500/500 [==============================] - 0s 60us/step - loss: 0.1575 - acc: 0.9500
Epoch 39/100
500/500 [==============================] - 0s 62us/step - loss: 0.1592 - acc: 0.9500
Epoch 40/100
500/500 [==============================] - 0s 58us/step - loss: 0.1581 - acc: 0.9460
Epoch 41/100
500/500 [==============================] - 0s 46us/step - loss: 0.1571 - acc: 0.9520
Epoch 42/100
500/500 [==============================] - 0s 55us/step - loss: 0.1562 - acc: 0.9520
Epoch 43/100
500/500 [==============================] - 0s 51us/step - loss: 0.1557 - acc: 0.9480
Epoch 44/100
500/500 [==============================] - 0s 57us/step - loss: 0.1567 - acc: 0.9500
Epoch 45/100
500/500 [==============================] - 0s 55us/step - loss: 0.1556 - acc: 0.9520
Epoch 46/100
500/500 [==============================] - 0s 45us/step - loss: 0.1571 - acc: 0.9480
Epoch 47/100
500/500 [==============================] - 0s 45us/step - loss: 0.1561 - acc: 0.9520
Epoch 48/100
500/500 [==============================] - 0s 42us/step - loss: 0.1555 - acc: 0.9440
Epoch 49/100
500/500 [==============================] - 0s 47us/step - loss: 0.1548 - acc: 0.9440
Epoch 50/100
500/500 [==============================] - 0s 49us/step - loss: 0.1543 - acc: 0.9440
Epoch 51/100
500/500 [==============================] - 0s 40us/step - loss: 0.1537 - acc: 0.9520
Epoch 52/100
500/500 [==============================] - 0s 45us/step - loss: 0.1539 - acc: 0.9500
Epoch 53/100
500/500 [==============================] - 0s 43us/step - loss: 0.1531 - acc: 0.9520
Epoch 54/100
500/500 [==============================] - 0s 47us/step - loss: 0.1550 - acc: 0.9460
Epoch 55/100
500/500 [==============================] - 0s 48us/step - loss: 0.1524 - acc: 0.9520
Epoch 56/100
500/500 [==============================] - 0s 36us/step - loss: 0.1541 - acc: 0.9520
Epoch 57/100
500/500 [==============================] - 0s 49us/step - loss: 0.1538 - acc: 0.9480
Epoch 58/100
500/500 [==============================] - 0s 43us/step - loss: 0.1530 - acc: 0.9480
Epoch 59/100
500/500 [==============================] - 0s 51us/step - loss: 0.1533 - acc: 0.9520
Epoch 60/100
500/500 [==============================] - 0s 38us/step - loss: 0.1528 - acc: 0.9520
Epoch 61/100
500/500 [==============================] - 0s 46us/step - loss: 0.1522 - acc: 0.9500
Epoch 62/100
500/500 [==============================] - 0s 45us/step - loss: 0.1526 - acc: 0.9500
Epoch 63/100
500/500 [==============================] - 0s 51us/step - loss: 0.1527 - acc: 0.9520
Epoch 64/100
500/500 [==============================] - 0s 52us/step - loss: 0.1522 - acc: 0.9500
Epoch 65/100
500/500 [==============================] - 0s 51us/step - loss: 0.1541 - acc: 0.9500
Epoch 66/100
500/500 [==============================] - 0s 41us/step - loss: 0.1521 - acc: 0.9500
Epoch 67/100
500/500 [==============================] - 0s 48us/step - loss: 0.1527 - acc: 0.9520
Epoch 68/100
500/500 [==============================] - 0s 53us/step - loss: 0.1533 - acc: 0.9500
Epoch 69/100
500/500 [==============================] - 0s 48us/step - loss: 0.1540 - acc: 0.9520
Epoch 70/100
500/500 [==============================] - 0s 46us/step - loss: 0.1542 - acc: 0.9460
Epoch 71/100
500/500 [==============================] - 0s 42us/step - loss: 0.1524 - acc: 0.9520
Epoch 72/100
500/500 [==============================] - 0s 42us/step - loss: 0.1535 - acc: 0.9500
Epoch 73/100
500/500 [==============================] - 0s 49us/step - loss: 0.1527 - acc: 0.9500
Epoch 74/100
500/500 [==============================] - 0s 47us/step - loss: 0.1518 - acc: 0.9480
Epoch 75/100
500/500 [==============================] - 0s 45us/step - loss: 0.1533 - acc: 0.9480
Epoch 76/100
500/500 [==============================] - 0s 39us/step - loss: 0.1516 - acc: 0.9500
Epoch 77/100
500/500 [==============================] - 0s 44us/step - loss: 0.1531 - acc: 0.9460
Epoch 78/100
500/500 [==============================] - 0s 45us/step - loss: 0.1555 - acc: 0.9480
Epoch 79/100
500/500 [==============================] - 0s 54us/step - loss: 0.1534 - acc: 0.9480
Epoch 80/100
500/500 [==============================] - 0s 48us/step - loss: 0.1527 - acc: 0.9460
Epoch 81/100
500/500 [==============================] - 0s 59us/step - loss: 0.1532 - acc: 0.9480
Epoch 82/100
500/500 [==============================] - 0s 66us/step - loss: 0.1520 - acc: 0.9480
Epoch 83/100
500/500 [==============================] - 0s 53us/step - loss: 0.1517 - acc: 0.9520
Epoch 84/100
500/500 [==============================] - 0s 55us/step - loss: 0.1524 - acc: 0.9500
Epoch 85/100
500/500 [==============================] - 0s 65us/step - loss: 0.1504 - acc: 0.9520
Epoch 86/100
500/500 [==============================] - 0s 63us/step - loss: 0.1518 - acc: 0.9500
Epoch 87/100
500/500 [==============================] - 0s 53us/step - loss: 0.1524 - acc: 0.9480
Epoch 88/100
500/500 [==============================] - 0s 51us/step - loss: 0.1512 - acc: 0.9480
Epoch 89/100
500/500 [==============================] - 0s 57us/step - loss: 0.1524 - acc: 0.9520
Epoch 90/100
500/500 [==============================] - 0s 62us/step - loss: 0.1524 - acc: 0.9500
Epoch 91/100
500/500 [==============================] - 0s 58us/step - loss: 0.1522 - acc: 0.9520
Epoch 92/100
500/500 [==============================] - 0s 62us/step - loss: 0.1516 - acc: 0.9480
Epoch 93/100
500/500 [==============================] - 0s 53us/step - loss: 0.1525 - acc: 0.9480
Epoch 94/100
500/500 [==============================] - 0s 61us/step - loss: 0.1510 - acc: 0.9520
Epoch 95/100
500/500 [==============================] - 0s 57us/step - loss: 0.1525 - acc: 0.9520
Epoch 96/100
500/500 [==============================] - 0s 38us/step - loss: 0.1504 - acc: 0.9480
Epoch 97/100
500/500 [==============================] - 0s 55us/step - loss: 0.1511 - acc: 0.9500
Epoch 98/100
500/500 [==============================] - 0s 56us/step - loss: 0.1516 - acc: 0.9500
Epoch 99/100
500/500 [==============================] - 0s 46us/step - loss: 0.1503 - acc: 0.9500
Epoch 100/100
500/500 [==============================] - 0s 61us/step - loss: 0.1518 - acc: 0.9480





&amp;lt;keras.callbacks.History at 0x1a332f0940&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def plot_decision_boundary(X, y_cat, model):
    x_span = np.linspace(min(X[:, 0]) - 1, max(X[:, 0]) + 1)
    y_span = np.linspace(min(X[:, 1]) - 1, max(X[:, 1]) + 1)
    xx, yy = np.meshgrid(x_span, y_span)
    grid = np.c_[xx.ravel(), yy.ravel()]
    pred_func = model.predict_classes(grid)
    z = pred_func.reshape(xx.shape)
    plt.contourf(xx, yy, z)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plot_decision_boundary(X, y_cat, model)
plt.scatter(X[y==0, 0],X[y==0, 1])
plt.scatter(X[y==1, 0],X[y==1, 1])
plt.scatter(X[y==2, 0],X[y==2, 1])
plt.scatter(X[y==3, 0],X[y==3, 1])
plt.scatter(X[y==4, 0],X[y==4, 1])

x = 0.5
y = 0.5

point = np.array([[x, y]])
predict = model.predict_classes(point)
plt.plot([x], [y], marker=&#39;o&#39;, markersize=10, color=&amp;quot;yellow&amp;quot;)
# plt.show()
print(&amp;quot;Prediction is: &amp;quot;, predict)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Prediction is:  [3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./Multiclass_7_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>09 Multiclass Classification</title>
      <link>https://jianzhang6.github.io/blog/build-an-autonomous-car-with-python/09/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/blog/build-an-autonomous-car-with-python/09/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
import keras
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import Adam
from keras.utils.np_utils import to_categorical
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;n_pts = 500
centers = [[-1, 1], [-1, -1], [1, -1], [1, 1], [0, 0]]
X, y = datasets.make_blobs(n_samples=n_pts, random_state=123, centers=centers, cluster_std=0.4)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plt.scatter(X[y==0, 0],X[y==0, 1])
plt.scatter(X[y==1, 0],X[y==1, 1])
plt.scatter(X[y==2, 0],X[y==2, 1])
plt.scatter(X[y==3, 0],X[y==3, 1])
plt.scatter(X[y==4, 0],X[y==4, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.collections.PathCollection at 0x1a33248400&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./Multiclass_2_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(y)
y_cat = to_categorical(y,5)
print(y_cat)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[3 3 4 0 2 1 1 4 4 4 3 2 1 0 2 4 4 4 3 0 3 0 3 4 1 3 1 0 4 2 3 1 0 4 1 0 4
 0 4 0 1 3 3 0 3 1 3 4 0 4 0 2 3 0 2 4 4 0 3 4 1 3 0 4 2 1 1 2 3 2 3 2 1 1
 3 2 4 2 2 3 0 2 4 3 2 1 3 3 3 3 1 1 4 2 4 4 1 2 4 1 4 2 2 3 4 1 1 3 3 2 1
 3 1 0 1 0 4 4 4 3 1 3 3 3 1 4 4 0 2 0 1 1 0 4 0 1 1 4 4 0 4 3 4 4 2 4 0 0
 0 4 2 0 4 1 0 2 2 1 3 0 1 2 2 4 4 1 3 2 3 3 3 2 2 2 4 0 1 1 0 1 4 4 3 2 3
 2 3 1 0 3 4 2 1 0 0 0 4 3 0 4 2 2 3 1 0 4 4 1 2 1 3 1 4 4 0 1 4 2 4 0 4 0
 1 2 3 0 1 0 3 3 4 3 4 0 0 1 1 3 0 4 1 4 2 1 2 4 4 3 3 1 1 1 4 1 1 1 4 3 1
 0 0 2 2 2 3 2 3 4 2 3 3 1 1 0 4 0 3 0 0 0 3 2 2 1 4 2 0 0 2 2 1 3 3 1 3 0
 0 1 4 2 2 2 1 0 0 1 0 0 1 2 4 2 4 2 1 3 0 0 1 4 1 2 4 4 4 3 4 1 2 3 1 3 1
 0 0 2 4 1 3 1 1 2 1 4 3 1 2 3 2 0 4 1 4 0 2 2 0 1 2 2 4 4 0 4 1 3 3 2 2 0
 4 3 3 1 2 2 4 3 0 3 3 3 3 0 1 4 4 4 0 3 3 2 4 0 4 0 0 4 2 2 2 3 0 2 0 0 1
 2 3 0 0 2 4 2 3 0 3 0 1 0 4 1 0 0 1 3 1 4 0 2 1 1 3 2 3 2 2 2 3 1 0 0 0 1
 3 4 2 1 0 2 1 4 3 3 4 0 0 2 2 0 0 2 2 3 4 3 2 2 2 2 0 1 3 0 2 1 2 0 2 3 4
 3 1 4 3 3 0 2 4 0 4 1 3 2 1 3 0 1 2 1]
[[0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1.]
 ...
 [0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0.]
 [0. 1. 0. 0. 0.]]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model = Sequential()
model.add(Dense(units=5, input_shape=(2,), activation=&#39;softmax&#39;))
model.compile(Adam(0.1), loss=&#39;categorical_crossentropy&#39;, metrics=[&#39;accuracy&#39;])

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;model.fit(x=X, y=y_cat, verbose=1, batch_size=50, epochs=100)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Epoch 1/100
500/500 [==============================] - 1s 1ms/step - loss: 1.2781 - acc: 0.4940
Epoch 2/100
500/500 [==============================] - 0s 49us/step - loss: 0.6296 - acc: 0.8520
Epoch 3/100
500/500 [==============================] - 0s 47us/step - loss: 0.4182 - acc: 0.9120
Epoch 4/100
500/500 [==============================] - 0s 65us/step - loss: 0.3323 - acc: 0.9440
Epoch 5/100
500/500 [==============================] - 0s 57us/step - loss: 0.2890 - acc: 0.9420
Epoch 6/100
500/500 [==============================] - 0s 50us/step - loss: 0.2626 - acc: 0.9460
Epoch 7/100
500/500 [==============================] - 0s 38us/step - loss: 0.2451 - acc: 0.9440
Epoch 8/100
500/500 [==============================] - 0s 51us/step - loss: 0.2323 - acc: 0.9480
Epoch 9/100
500/500 [==============================] - 0s 40us/step - loss: 0.2217 - acc: 0.9500
Epoch 10/100
500/500 [==============================] - 0s 150us/step - loss: 0.2145 - acc: 0.9500
Epoch 11/100
500/500 [==============================] - 0s 76us/step - loss: 0.2062 - acc: 0.9460
Epoch 12/100
500/500 [==============================] - 0s 72us/step - loss: 0.2001 - acc: 0.9440
Epoch 13/100
500/500 [==============================] - 0s 65us/step - loss: 0.1956 - acc: 0.9500
Epoch 14/100
500/500 [==============================] - 0s 47us/step - loss: 0.1914 - acc: 0.9500
Epoch 15/100
500/500 [==============================] - 0s 85us/step - loss: 0.1877 - acc: 0.9480
Epoch 16/100
500/500 [==============================] - 0s 64us/step - loss: 0.1857 - acc: 0.9460
Epoch 17/100
500/500 [==============================] - 0s 67us/step - loss: 0.1816 - acc: 0.9480
Epoch 18/100
500/500 [==============================] - 0s 60us/step - loss: 0.1811 - acc: 0.9420
Epoch 19/100
500/500 [==============================] - 0s 69us/step - loss: 0.1766 - acc: 0.9500
Epoch 20/100
500/500 [==============================] - 0s 79us/step - loss: 0.1767 - acc: 0.9460
Epoch 21/100
500/500 [==============================] - 0s 53us/step - loss: 0.1721 - acc: 0.9500
Epoch 22/100
500/500 [==============================] - 0s 57us/step - loss: 0.1725 - acc: 0.9460
Epoch 23/100
500/500 [==============================] - 0s 54us/step - loss: 0.1688 - acc: 0.9500
Epoch 24/100
500/500 [==============================] - 0s 69us/step - loss: 0.1693 - acc: 0.9440
Epoch 25/100
500/500 [==============================] - 0s 59us/step - loss: 0.1665 - acc: 0.9480
Epoch 26/100
500/500 [==============================] - 0s 91us/step - loss: 0.1666 - acc: 0.9460
Epoch 27/100
500/500 [==============================] - 0s 63us/step - loss: 0.1650 - acc: 0.9500
Epoch 28/100
500/500 [==============================] - 0s 68us/step - loss: 0.1637 - acc: 0.9520
Epoch 29/100
500/500 [==============================] - 0s 61us/step - loss: 0.1630 - acc: 0.9520
Epoch 30/100
500/500 [==============================] - 0s 76us/step - loss: 0.1634 - acc: 0.9440
Epoch 31/100
500/500 [==============================] - 0s 48us/step - loss: 0.1607 - acc: 0.9500
Epoch 32/100
500/500 [==============================] - 0s 85us/step - loss: 0.1613 - acc: 0.9480
Epoch 33/100
500/500 [==============================] - 0s 65us/step - loss: 0.1604 - acc: 0.9500
Epoch 34/100
500/500 [==============================] - 0s 58us/step - loss: 0.1604 - acc: 0.9480
Epoch 35/100
500/500 [==============================] - 0s 75us/step - loss: 0.1590 - acc: 0.9500
Epoch 36/100
500/500 [==============================] - 0s 52us/step - loss: 0.1590 - acc: 0.9500
Epoch 37/100
500/500 [==============================] - 0s 59us/step - loss: 0.1582 - acc: 0.9500
Epoch 38/100
500/500 [==============================] - 0s 60us/step - loss: 0.1575 - acc: 0.9500
Epoch 39/100
500/500 [==============================] - 0s 62us/step - loss: 0.1592 - acc: 0.9500
Epoch 40/100
500/500 [==============================] - 0s 58us/step - loss: 0.1581 - acc: 0.9460
Epoch 41/100
500/500 [==============================] - 0s 46us/step - loss: 0.1571 - acc: 0.9520
Epoch 42/100
500/500 [==============================] - 0s 55us/step - loss: 0.1562 - acc: 0.9520
Epoch 43/100
500/500 [==============================] - 0s 51us/step - loss: 0.1557 - acc: 0.9480
Epoch 44/100
500/500 [==============================] - 0s 57us/step - loss: 0.1567 - acc: 0.9500
Epoch 45/100
500/500 [==============================] - 0s 55us/step - loss: 0.1556 - acc: 0.9520
Epoch 46/100
500/500 [==============================] - 0s 45us/step - loss: 0.1571 - acc: 0.9480
Epoch 47/100
500/500 [==============================] - 0s 45us/step - loss: 0.1561 - acc: 0.9520
Epoch 48/100
500/500 [==============================] - 0s 42us/step - loss: 0.1555 - acc: 0.9440
Epoch 49/100
500/500 [==============================] - 0s 47us/step - loss: 0.1548 - acc: 0.9440
Epoch 50/100
500/500 [==============================] - 0s 49us/step - loss: 0.1543 - acc: 0.9440
Epoch 51/100
500/500 [==============================] - 0s 40us/step - loss: 0.1537 - acc: 0.9520
Epoch 52/100
500/500 [==============================] - 0s 45us/step - loss: 0.1539 - acc: 0.9500
Epoch 53/100
500/500 [==============================] - 0s 43us/step - loss: 0.1531 - acc: 0.9520
Epoch 54/100
500/500 [==============================] - 0s 47us/step - loss: 0.1550 - acc: 0.9460
Epoch 55/100
500/500 [==============================] - 0s 48us/step - loss: 0.1524 - acc: 0.9520
Epoch 56/100
500/500 [==============================] - 0s 36us/step - loss: 0.1541 - acc: 0.9520
Epoch 57/100
500/500 [==============================] - 0s 49us/step - loss: 0.1538 - acc: 0.9480
Epoch 58/100
500/500 [==============================] - 0s 43us/step - loss: 0.1530 - acc: 0.9480
Epoch 59/100
500/500 [==============================] - 0s 51us/step - loss: 0.1533 - acc: 0.9520
Epoch 60/100
500/500 [==============================] - 0s 38us/step - loss: 0.1528 - acc: 0.9520
Epoch 61/100
500/500 [==============================] - 0s 46us/step - loss: 0.1522 - acc: 0.9500
Epoch 62/100
500/500 [==============================] - 0s 45us/step - loss: 0.1526 - acc: 0.9500
Epoch 63/100
500/500 [==============================] - 0s 51us/step - loss: 0.1527 - acc: 0.9520
Epoch 64/100
500/500 [==============================] - 0s 52us/step - loss: 0.1522 - acc: 0.9500
Epoch 65/100
500/500 [==============================] - 0s 51us/step - loss: 0.1541 - acc: 0.9500
Epoch 66/100
500/500 [==============================] - 0s 41us/step - loss: 0.1521 - acc: 0.9500
Epoch 67/100
500/500 [==============================] - 0s 48us/step - loss: 0.1527 - acc: 0.9520
Epoch 68/100
500/500 [==============================] - 0s 53us/step - loss: 0.1533 - acc: 0.9500
Epoch 69/100
500/500 [==============================] - 0s 48us/step - loss: 0.1540 - acc: 0.9520
Epoch 70/100
500/500 [==============================] - 0s 46us/step - loss: 0.1542 - acc: 0.9460
Epoch 71/100
500/500 [==============================] - 0s 42us/step - loss: 0.1524 - acc: 0.9520
Epoch 72/100
500/500 [==============================] - 0s 42us/step - loss: 0.1535 - acc: 0.9500
Epoch 73/100
500/500 [==============================] - 0s 49us/step - loss: 0.1527 - acc: 0.9500
Epoch 74/100
500/500 [==============================] - 0s 47us/step - loss: 0.1518 - acc: 0.9480
Epoch 75/100
500/500 [==============================] - 0s 45us/step - loss: 0.1533 - acc: 0.9480
Epoch 76/100
500/500 [==============================] - 0s 39us/step - loss: 0.1516 - acc: 0.9500
Epoch 77/100
500/500 [==============================] - 0s 44us/step - loss: 0.1531 - acc: 0.9460
Epoch 78/100
500/500 [==============================] - 0s 45us/step - loss: 0.1555 - acc: 0.9480
Epoch 79/100
500/500 [==============================] - 0s 54us/step - loss: 0.1534 - acc: 0.9480
Epoch 80/100
500/500 [==============================] - 0s 48us/step - loss: 0.1527 - acc: 0.9460
Epoch 81/100
500/500 [==============================] - 0s 59us/step - loss: 0.1532 - acc: 0.9480
Epoch 82/100
500/500 [==============================] - 0s 66us/step - loss: 0.1520 - acc: 0.9480
Epoch 83/100
500/500 [==============================] - 0s 53us/step - loss: 0.1517 - acc: 0.9520
Epoch 84/100
500/500 [==============================] - 0s 55us/step - loss: 0.1524 - acc: 0.9500
Epoch 85/100
500/500 [==============================] - 0s 65us/step - loss: 0.1504 - acc: 0.9520
Epoch 86/100
500/500 [==============================] - 0s 63us/step - loss: 0.1518 - acc: 0.9500
Epoch 87/100
500/500 [==============================] - 0s 53us/step - loss: 0.1524 - acc: 0.9480
Epoch 88/100
500/500 [==============================] - 0s 51us/step - loss: 0.1512 - acc: 0.9480
Epoch 89/100
500/500 [==============================] - 0s 57us/step - loss: 0.1524 - acc: 0.9520
Epoch 90/100
500/500 [==============================] - 0s 62us/step - loss: 0.1524 - acc: 0.9500
Epoch 91/100
500/500 [==============================] - 0s 58us/step - loss: 0.1522 - acc: 0.9520
Epoch 92/100
500/500 [==============================] - 0s 62us/step - loss: 0.1516 - acc: 0.9480
Epoch 93/100
500/500 [==============================] - 0s 53us/step - loss: 0.1525 - acc: 0.9480
Epoch 94/100
500/500 [==============================] - 0s 61us/step - loss: 0.1510 - acc: 0.9520
Epoch 95/100
500/500 [==============================] - 0s 57us/step - loss: 0.1525 - acc: 0.9520
Epoch 96/100
500/500 [==============================] - 0s 38us/step - loss: 0.1504 - acc: 0.9480
Epoch 97/100
500/500 [==============================] - 0s 55us/step - loss: 0.1511 - acc: 0.9500
Epoch 98/100
500/500 [==============================] - 0s 56us/step - loss: 0.1516 - acc: 0.9500
Epoch 99/100
500/500 [==============================] - 0s 46us/step - loss: 0.1503 - acc: 0.9500
Epoch 100/100
500/500 [==============================] - 0s 61us/step - loss: 0.1518 - acc: 0.9480





&amp;lt;keras.callbacks.History at 0x1a332f0940&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def plot_decision_boundary(X, y_cat, model):
    x_span = np.linspace(min(X[:, 0]) - 1, max(X[:, 0]) + 1)
    y_span = np.linspace(min(X[:, 1]) - 1, max(X[:, 1]) + 1)
    xx, yy = np.meshgrid(x_span, y_span)
    grid = np.c_[xx.ravel(), yy.ravel()]
    pred_func = model.predict_classes(grid)
    z = pred_func.reshape(xx.shape)
    plt.contourf(xx, yy, z)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;plot_decision_boundary(X, y_cat, model)
plt.scatter(X[y==0, 0],X[y==0, 1])
plt.scatter(X[y==1, 0],X[y==1, 1])
plt.scatter(X[y==2, 0],X[y==2, 1])
plt.scatter(X[y==3, 0],X[y==3, 1])
plt.scatter(X[y==4, 0],X[y==4, 1])

x = 0.5
y = 0.5

point = np.array([[x, y]])
predict = model.predict_classes(point)
plt.plot([x], [y], marker=&#39;o&#39;, markersize=10, color=&amp;quot;yellow&amp;quot;)
# plt.show()
print(&amp;quot;Prediction is: &amp;quot;, predict)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Prediction is:  [3]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./Multiclass_7_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://jianzhang6.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://jianzhang6.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/&#34;&gt;Academic&lt;/a&gt; | &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&#39;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://spectrum.chat/academic&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
